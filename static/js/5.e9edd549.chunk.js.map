{"version":3,"sources":["hooks/useGetExchangeRates.ts","context/ConverterContext.tsx","components/CurrencySelection.tsx","pages/CurrencyConverter.tsx","constants/currency.ts","components/SectionTitle.tsx"],"names":["EXCHANGE_RATES","gql","useGetExchangeRates","options","useQuery","initialState","currencyA","CURRENCY_OPTIONS","currencyB","setCurrencyA","setCurrencyB","amountA","amountB","setAmountA","setAmountB","rates","loading","ConverterContext","createContext","ConverterContextProvider","children","useState","variables","baseCurrency","quoteCurrencies","CURRENCIES_ARRAY","data","getRates","useCallback","currencyValueA","currencyValueB","quoteA","latest","find","item","quoteCurrency","quote","quoteB","useMemo","value","HandleChangeCurrencyA","opt","HandleChangeCurrencyB","Provider","fieldLabelStyle","css","SECONDARY_GRAY","CurrencySelection","selectionType","useContext","currentValue","opositeValue","currentAmount","setCurrentAmount","setOpositeAmount","rate","handleAmountChange","e","Number","target","data-testid","LIGHT_GRAY","onChange","isOptionDisabled","option","isClearable","styles","indicatorSeparator","display","input","provided","control","state","border","DETAIL_GRAY","padding","boxShadow","isFocused","DARK_GRAY","undefined","menuList","singleValue","margin","valueContainer","toString","type","SYMBOL","CurrencyConverter","ContentWrapper","SectionTitle","title","subtitle","CURRENCIES","short","name","USD","EUR","JPY","BGN","CZK","GBP","HUF","PLN","RON","SEK","CHF","ISK","NOK","HRK","RUB","TRY","AUD","label","props"],"mappings":"gMAEaA,EAAiBC,cAAH,4PAuBdC,EAAsB,SACjCC,GAEA,OAAOC,mBAA4BJ,EAApB,eAAyCG,M,mKCNpDE,EAA+B,CACnCC,UAAWC,IAAiB,GAC5BC,UAAWD,IAAiB,GAC5BE,aAAc,aACdC,aAAc,aACdC,QAAS,EACTC,QAAS,EACTC,WAAY,aACZC,WAAY,aACZC,MAAO,CAAC,EAAG,GACXC,SAAS,GAGEC,EAAmBC,wBAA8Bb,GAEjDc,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC1BC,mBAASd,IAAiB,IADA,mBACrDD,EADqD,KAC1CG,EAD0C,OAE1BY,mBAASd,IAAiB,IAFA,mBAErDC,EAFqD,KAE1CE,EAF0C,OAG9BW,mBAAS,GAHqB,mBAGrDV,EAHqD,KAG5CE,EAH4C,OAI9BQ,mBAAS,GAJqB,mBAIrDT,EAJqD,KAI5CE,EAJ4C,OAMlCZ,YAAoB,CAC5CoB,UAAW,CACTC,aAAc,MACdC,gBAAiBC,OAHbC,EANoD,EAMpDA,KAAMV,EAN8C,EAM9CA,QAORW,EAAWC,uBACf,SAACC,EAAwBC,GAA4B,IAAD,QAC5CC,EACe,QAAnBF,EACI,EADJ,iBAEIH,QAFJ,IAEIA,GAFJ,UAEIA,EAAMM,OAAOC,MAAK,SAACC,GAAD,OAAUA,EAAKC,gBAAkBN,YAFvD,aAEI,EACIO,aAHR,QAGiB,EACbC,EACe,QAAnBP,EACI,EADJ,iBAEIJ,QAFJ,IAEIA,GAFJ,UAEIA,EAAMM,OAAOC,MAAK,SAACC,GAAD,OAAUA,EAAKC,gBAAkBL,YAFvD,aAEI,EACIM,aAHR,QAGiB,EAKnB,MAAO,CAHkB,IAAXC,EAAe,EAAIN,EAASM,EACjB,IAAXN,EAAe,EAAIM,EAASN,KAI5C,CAACL,IAGGX,EAAQuB,mBAAQ,WACpB,OAAOX,EAASrB,EAAUiC,MAAO/B,EAAU+B,SAC1C,CAACZ,EAAUrB,EAAWE,IAEnBgC,EAAwBZ,uBAC5B,SAACa,GACChC,EAAagC,GACb3B,EAAWH,EAAUgB,EAASc,EAAIF,MAAO/B,EAAU+B,OAAO,MAE5D,CAAC9B,EAAcE,EAASG,EAAYa,EAAUnB,IAG1CkC,EAAwBd,uBAC5B,SAACa,GACC/B,EAAa+B,GACb5B,EAAWD,EAAUe,EAASrB,EAAUiC,MAAOE,EAAIF,OAAO,MAE5D,CAAC7B,EAAcE,EAASC,EAAYc,EAAUrB,IAGhD,OACE,cAACW,EAAiB0B,SAAlB,CACEJ,MAAO,CACLjC,YACAG,aAAc+B,EACdhC,YACAE,aAAcgC,EACd/B,UACAE,aACAD,UACAE,aACAC,QACAC,WAXJ,SAcGI,KC3FDwB,EAAkBC,YAAH,gLAQVC,KAMEC,EAA+C,SAAC,GAEtD,IADLC,EACI,EADJA,cACI,EAYAC,qBAAWhC,GAVbX,EAFE,EAEFA,UACAG,EAHE,EAGFA,aACAD,EAJE,EAIFA,UACAE,EALE,EAKFA,aACAC,EANE,EAMFA,QACAE,EAPE,EAOFA,WACAD,EARE,EAQFA,QACAE,EATE,EASFA,WACAC,EAVE,EAUFA,MACAC,EAXE,EAWFA,QAGIkC,EAAiC,MAAlBF,EAAwB1C,EAAYE,EACnD2C,EAAiC,MAAlBH,EAAwBxC,EAAYF,EACnD8C,EAAkC,MAAlBJ,EAAwBrC,EAAUC,EAClDyC,EAAqC,MAAlBL,EAAwBnC,EAAaC,EACxDwC,EAAqC,MAAlBN,EAAwBlC,EAAaD,EAExD0C,EAAOxC,EAAwB,MAAlBiC,EAAwB,EAAI,GAEzCQ,EAAqB5B,uBACzB,SAAC6B,GACCJ,EAAiBK,OAAOD,EAAEE,OAAOpB,QACjCe,EAAiBI,OAAOD,EAAEE,OAAOpB,OAASgB,KAE5C,CAACF,EAAkBC,EAAkBC,IAGvC,OACE,mBACEK,cACoB,MAAlBZ,EAAwB,sBAAwB,sBAElDH,IAAKA,YAAF,gHAMH,mBACEA,IAAKA,YAAF,qSAMQC,IAEWe,MAItB,qBAAOhB,IAAKD,GAAZ,WAEE,YAAC,IAAD,CACEL,MAAOW,EACPY,SAAU,SAACvB,GACK,OAAVA,IACgB,MAAlBS,EACIvC,EAAa8B,GACb7B,EAAa6B,KAGrBwB,iBAAkB,SAACC,GAAD,OAAYA,EAAOzB,QAAUY,EAAaZ,OAC5DpC,QAASI,IACT0D,aAAa,EACbC,OAAQ,CACNC,mBAAoB,iBAAO,CACzBC,QAAS,SAEXC,MAAO,SAACC,GAAD,sBACFA,IAELC,QAAS,SAACD,EAAUE,GAAX,mBAAC,eACLF,GADI,IAEPG,OAAO,aAAD,OAAeC,IAAf,eACNC,QAAS,YAETC,UAAWJ,EAAMK,UAAN,oBACMC,UACbC,KAENC,SAAU,SAACV,GAAD,mBAAC,eACNA,GADK,IAERK,QAAS,eAEXX,OAAQ,SAACM,GAAD,sBACHA,IAELW,YAAa,SAACX,GAAD,mBAAC,eACTA,GADQ,IAEXY,OAAQ,EACRP,QAAS,KAEXQ,eAAgB,SAACb,GAAD,mBAAC,eACZA,GADW,IAEdY,OAAQ,EACRP,QAAS,MAGb9B,IAAKA,YAAF,qKAIQC,QAIf,mBACED,IAAKA,YAAF,oGAKH,qBAAOA,IAAKD,GAAZ,eAEE,qBACEgB,cAA+B,MAAlBZ,EAAwB,UAAY,UACjDT,MAAOa,EAAcgC,WACrBtB,SAAUN,EACV6B,KAAK,SACLxC,IAAKA,YAAF,uuBAMQC,IAEW4B,IAIEI,QAc5B,oBACEjC,IAAKA,YAAF,iQACQC,MASVwC,IAAOpC,EAAaX,UAI3B,oBACEM,IAAKA,YAAF,+IAIQiC,MAGV9D,EACG,aADI,YAECkC,EAAaX,MAFd,cAEyBgB,EAFzB,YAEiCJ,EAAaZ,UChK/CgD,UAnCe,WAC5B,OACE,YAAC,EAAD,KACE,2BACE,YAACC,EAAA,EAAD,CACE3C,IAAKA,YAAF,uMAQH,YAAC4C,EAAA,EAAD,CACEC,MAAM,qBACNC,SAAS,4DACT9C,IAAKA,YAAF,+EAIL,mBACEA,IAAKA,YAAF,iGAKH,YAAC,EAAD,CAAmBG,cAAc,MACjC,YAAC,EAAD,CAAmBA,cAAc,Y,gCCrC7C,wIAAO,IAAM4C,EAAa,CACxB,CAAEC,MAAO,MAAOC,KAAM,QACtB,CAAED,MAAO,MAAOC,KAAM,gBACtB,CAAED,MAAO,MAAOC,KAAM,iBACtB,CAAED,MAAO,MAAOC,KAAM,gBACtB,CAAED,MAAO,MAAOC,KAAM,kBACtB,CAAED,MAAO,MAAOC,KAAM,oBACtB,CAAED,MAAO,MAAOC,KAAM,gBACtB,CAAED,MAAO,MAAOC,KAAM,gBACtB,CAAED,MAAO,MAAOC,KAAM,iBACtB,CAAED,MAAO,MAAOC,KAAM,eACtB,CAAED,MAAO,MAAOC,KAAM,mBACtB,CAAED,MAAO,MAAOC,KAAM,mBACtB,CAAED,MAAO,MAAOC,KAAM,iBACtB,CAAED,MAAO,MAAOC,KAAM,kBACtB,CAAED,MAAO,MAAOC,KAAM,gBACtB,CAAED,MAAO,MAAOC,KAAM,sBAGXR,EAAS,CACpBS,IAAK,IACLC,IAAK,SACLC,IAAK,OACLC,IAAK,gBACLC,IAAK,UACLC,IAAK,OACLC,IAAK,KACLC,IAAK,UACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,SACLC,IAAK,SACLC,IAAK,MAGMxG,EAAmB,CAC9B,CAAEyG,MAAO,6BAA8BzE,MAAO,OAC9C,CAAEyE,MAAO,aAAczE,MAAO,OAC9B,CAAEyE,MAAO,qBAAsBzE,MAAO,OACtC,CAAEyE,MAAO,sBAAuBzE,MAAO,OACvC,CAAEyE,MAAO,qBAAsBzE,MAAO,OACtC,CAAEyE,MAAO,uBAAwBzE,MAAO,OACxC,CAAEyE,MAAO,yBAA0BzE,MAAO,OAC1C,CAAEyE,MAAO,qBAAsBzE,MAAO,OACtC,CAAEyE,MAAO,qBAAsBzE,MAAO,OACtC,CAAEyE,MAAO,sBAAuBzE,MAAO,OACvC,CAAEyE,MAAO,oBAAqBzE,MAAO,OACrC,CAAEyE,MAAO,wBAAyBzE,MAAO,OACzC,CAAEyE,MAAO,wBAAyBzE,MAAO,OACzC,CAAEyE,MAAO,sBAAuBzE,MAAO,OACvC,CAAEyE,MAAO,uBAAwBzE,MAAO,OACxC,CAAEyE,MAAO,qBAAsBzE,MAAO,OACtC,CAAEyE,MAAO,0BAA2BzE,MAAO,QAGhCd,EAAmB,CAC9B,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,Q,2HC9DWgE,EAA0C,SAAC,GAIjD,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACGsB,EACC,oCACJ,OACE,iCACMA,EADN,CAEEpE,IAAKA,YAAF,+JAMQiC,OAGX,kBACEjC,IAAKA,YAAF,oHAMF6C,GAEH,kBACE7C,IAAKA,YAAF,oHAMF8C","file":"static/js/5.e9edd549.chunk.js","sourcesContent":["import { useQuery, gql, QueryHookOptions } from '@apollo/client'\n\nexport const EXCHANGE_RATES = gql`\n  query GetExchangeRates($baseCurrency: String, $quoteCurrencies: [String!]) {\n    latest(baseCurrency: $baseCurrency, quoteCurrencies: $quoteCurrencies) {\n      baseCurrency\n      quoteCurrency\n      quote\n    }\n  }\n`\n\ninterface Rate {\n  baseCurrency: string\n  quoteCurrency: string\n  quote: number\n}\ninterface Result {\n  latest: Rate[]\n}\ninterface Variables {\n  baseCurrency: string\n  quoteCurrencies: Array<string>\n}\n\nexport const useGetExchangeRates = (\n  options?: QueryHookOptions<Result, Variables>,\n) => {\n  return useQuery<Result, Variables>(EXCHANGE_RATES, { ...options })\n}\n","import React, { createContext, FC, useCallback, useMemo, useState } from 'react'\nimport { CURRENCIES_ARRAY, CURRENCY_OPTIONS } from '../constants/currency'\nimport { useGetExchangeRates } from '../hooks/useGetExchangeRates'\n\ninterface Option {\n  label: string\n  value: string\n}\n\ninterface ConverterState {\n  currencyA: Option\n  currencyB: Option\n  setCurrencyA: (opt: Option) => void\n  setCurrencyB: (opt: Option) => void\n  amountA: number\n  amountB: number\n  setAmountA: React.Dispatch<React.SetStateAction<number>>\n  setAmountB: React.Dispatch<React.SetStateAction<number>>\n  rates: number[]\n  loading: boolean\n}\n\nconst initialState: ConverterState = {\n  currencyA: CURRENCY_OPTIONS[0],\n  currencyB: CURRENCY_OPTIONS[1],\n  setCurrencyA: () => void 0,\n  setCurrencyB: () => void 0,\n  amountA: 0,\n  amountB: 0,\n  setAmountA: () => void 0,\n  setAmountB: () => void 0,\n  rates: [0, 0],\n  loading: false,\n}\n\nexport const ConverterContext = createContext<ConverterState>(initialState)\n\nexport const ConverterContextProvider: FC = ({ children }) => {\n  const [currencyA, setCurrencyA] = useState(CURRENCY_OPTIONS[0])\n  const [currencyB, setCurrencyB] = useState(CURRENCY_OPTIONS[1])\n  const [amountA, setAmountA] = useState(0)\n  const [amountB, setAmountB] = useState(0)\n\n  const { data, loading } = useGetExchangeRates({\n    variables: {\n      baseCurrency: 'USD',\n      quoteCurrencies: CURRENCIES_ARRAY,\n    },\n  })\n\n  const getRates = useCallback(\n    (currencyValueA: string, currencyValueB: string) => {\n      const quoteA =\n        currencyValueA === 'USD'\n          ? 1\n          : data?.latest.find((item) => item.quoteCurrency === currencyValueA)\n              ?.quote ?? 0\n      const quoteB =\n        currencyValueB === 'USD'\n          ? 1\n          : data?.latest.find((item) => item.quoteCurrency === currencyValueB)\n              ?.quote ?? 0\n\n      const rateA = quoteB === 0 ? 0 : quoteA / quoteB\n      const rateB = quoteA === 0 ? 0 : quoteB / quoteA\n\n      return [rateA, rateB]\n    },\n    [data],\n  )\n\n  const rates = useMemo(() => {\n    return getRates(currencyA.value, currencyB.value)\n  }, [getRates, currencyA, currencyB])\n\n  const HandleChangeCurrencyA = useCallback(\n    (opt: Option) => {\n      setCurrencyA(opt)\n      setAmountB(amountA * getRates(opt.value, currencyB.value)[0])\n    },\n    [setCurrencyA, amountA, setAmountB, getRates, currencyB],\n  )\n\n  const HandleChangeCurrencyB = useCallback(\n    (opt: Option) => {\n      setCurrencyB(opt)\n      setAmountA(amountB * getRates(currencyA.value, opt.value)[1])\n    },\n    [setCurrencyB, amountB, setAmountA, getRates, currencyA],\n  )\n\n  return (\n    <ConverterContext.Provider\n      value={{\n        currencyA,\n        setCurrencyA: HandleChangeCurrencyA,\n        currencyB,\n        setCurrencyB: HandleChangeCurrencyB,\n        amountA,\n        setAmountA,\n        amountB,\n        setAmountB,\n        rates,\n        loading,\n      }}\n    >\n      {children}\n    </ConverterContext.Provider>\n  )\n}\n","/** @jsxRuntime classic /\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nimport React, { FC, useCallback, useContext } from 'react'\nimport Select from 'react-select'\n\nimport {\n  DARK_GRAY,\n  DETAIL_GRAY,\n  LIGHT_GRAY,\n  SECONDARY_GRAY,\n} from '../constants/colors'\nimport { CURRENCY_OPTIONS, SYMBOL } from '../constants/currency'\nimport { ConverterContext } from '../context/ConverterContext'\n\nconst fieldLabelStyle = css`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 13px;\n  font-size: 18px;\n  line-height: 21px;\n  font-weight: 300;\n  color: ${SECONDARY_GRAY};\n`\n\ninterface CurrencySelectionProp {\n  selectionType: 'A' | 'B'\n}\nexport const CurrencySelection: FC<CurrencySelectionProp> = ({\n  selectionType,\n}) => {\n  const {\n    currencyA,\n    setCurrencyA,\n    currencyB,\n    setCurrencyB,\n    amountA,\n    setAmountA,\n    amountB,\n    setAmountB,\n    rates,\n    loading,\n  } = useContext(ConverterContext)\n\n  const currentValue = selectionType === 'A' ? currencyA : currencyB\n  const opositeValue = selectionType === 'A' ? currencyB : currencyA\n  const currentAmount = selectionType === 'A' ? amountA : amountB\n  const setCurrentAmount = selectionType === 'A' ? setAmountA : setAmountB\n  const setOpositeAmount = selectionType === 'A' ? setAmountB : setAmountA\n\n  const rate = rates[selectionType === 'A' ? 0 : 1]\n\n  const handleAmountChange = useCallback(\n    (e) => {\n      setCurrentAmount(Number(e.target.value))\n      setOpositeAmount(Number(e.target.value) * rate)\n    },\n    [setCurrentAmount, setOpositeAmount, rate],\n  )\n\n  return (\n    <div\n      data-testid={\n        selectionType === 'A' ? 'selection-wrapper-a' : 'selection-wrapper-b'\n      }\n      css={css`\n        display: flex;\n        flex-direction: column;\n        gap: 18px;\n      `}\n    >\n      <div\n        css={css`\n          display: flex;\n          flex-direction: column;\n          gap: 32px;\n          box-sizing: border-box;\n          width: 436px;\n          color: ${SECONDARY_GRAY};\n          padding: 35px;\n          background-color: ${LIGHT_GRAY};\n          border-radius: 10px;\n        `}\n      >\n        <label css={fieldLabelStyle}>\n          Currency\n          <Select\n            value={currentValue}\n            onChange={(value) => {\n              if (value !== null) {\n                selectionType === 'A'\n                  ? setCurrencyA(value)\n                  : setCurrencyB(value)\n              }\n            }}\n            isOptionDisabled={(option) => option.value === opositeValue.value}\n            options={CURRENCY_OPTIONS}\n            isClearable={false}\n            styles={{\n              indicatorSeparator: () => ({\n                display: 'none',\n              }),\n              input: (provided) => ({\n                ...provided,\n              }),\n              control: (provided, state) => ({\n                ...provided,\n                border: `1px solid ${DETAIL_GRAY} !important`,\n                padding: '10px 20px',\n\n                boxShadow: state.isFocused\n                  ? `0 0 0 1px ${DARK_GRAY}`\n                  : undefined,\n              }),\n              menuList: (provided) => ({\n                ...provided,\n                padding: '10px 20px',\n              }),\n              option: (provided) => ({\n                ...provided,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                margin: 0,\n                padding: 0,\n              }),\n              valueContainer: (provided) => ({\n                ...provided,\n                margin: 0,\n                padding: 0,\n              }),\n            }}\n            css={css`\n              font-size: 18px;\n              line-height: 21px;\n              font-weight: 500;\n              color: ${SECONDARY_GRAY};\n            `}\n          />\n        </label>\n        <div\n          css={css`\n            position: relative;\n            display: flex;\n          `}\n        >\n          <label css={fieldLabelStyle}>\n            Enter amount\n            <input\n              data-testid={selectionType === 'A' ? 'input-a' : 'input-b'}\n              value={currentAmount.toString()}\n              onChange={handleAmountChange}\n              type=\"number\"\n              css={css`\n                box-sizing: border-box;\n                width: 100%;\n                font-size: 18px;\n                line-height: 30px;\n                font-weight: 700;\n                color: ${SECONDARY_GRAY};\n                padding: 10px 20px;\n                border: 1px solid ${DETAIL_GRAY};\n                border-radius: 4px;\n\n                &:focus {\n                  outline: 2px auto ${DARK_GRAY};\n                }\n\n                &::-webkit-outer-spin-button,\n                &::-webkit-inner-spin-button {\n                  -webkit-appearance: none;\n                  margin: 0;\n                }\n                &[type='number'] {\n                  -moz-appearance: textfield;\n                }\n              `}\n            />\n          </label>\n          <span\n            css={css`\n              color: ${SECONDARY_GRAY};\n              font-size: 18px;\n              line-height: 30px;\n              font-weight: 700;\n              position: absolute;\n              right: 20px;\n              bottom: 10px;\n            `}\n          >\n            {SYMBOL[currentValue.value]}\n          </span>\n        </div>\n      </div>\n      <span\n        css={css`\n          font-size: 18px;\n          font-weight: 300;\n          padding: 0 35px;\n          color: ${DARK_GRAY};\n        `}\n      >\n        {loading\n          ? 'Loading...'\n          : `1 ${currentValue.value} = ${rate} ${opositeValue.value}`}\n      </span>\n    </div>\n  )\n}\n","/** @jsxRuntime classic /\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nimport React, { FC } from 'react'\n\nimport { SectionTitle } from '../components/SectionTitle'\nimport { ContentWrapper } from '../components/ContentWrapper'\nimport { CurrencySelection } from '../components/CurrencySelection'\nimport { ConverterContextProvider } from '../context/ConverterContext'\n\nconst CurrencyConverter: FC = () => {\n  return (\n    <ConverterContextProvider>\n      <section>\n        <ContentWrapper\n          css={css`\n            display: flex;\n            flex-direction: column;\n            width: 100%;\n            box-sizing: border-box;\n            padding-top: 83px;\n          `}\n        >\n          <SectionTitle\n            title=\"Currency converter\"\n            subtitle=\"Please enter the amount you want to convert in any field.\"\n            css={css`\n              padding-bottom: 62px;\n            `}\n          />\n          <div\n            css={css`\n              display: flex;\n              gap: 49px;\n            `}\n          >\n            <CurrencySelection selectionType=\"A\" />\n            <CurrencySelection selectionType=\"B\" />\n          </div>\n        </ContentWrapper>\n      </section>\n    </ConverterContextProvider>\n  )\n}\n\nexport default CurrencyConverter\n","export const CURRENCIES = [\n  { short: 'EUR', name: 'Euro' },\n  { short: 'JPY', name: 'Japanese yen' },\n  { short: 'BGN', name: 'Bulgarian lev' },\n  { short: 'CZK', name: 'Czech koruna' },\n  { short: 'GBP', name: 'Pound sterling' },\n  { short: 'HUF', name: 'Hungarian forint' },\n  { short: 'PLN', name: 'Polish zloty' },\n  { short: 'RON', name: 'Romanian leu' },\n  { short: 'SEK', name: 'Swedish krona' },\n  { short: 'CHF', name: 'Swiss franc' },\n  { short: 'ISK', name: 'Icelandic krona' },\n  { short: 'NOK', name: 'Norwegian krone' },\n  { short: 'HRK', name: 'Croatian kuna' },\n  { short: 'RUB', name: 'Russian rouble' },\n  { short: 'TRY', name: 'Turkish lira' },\n  { short: 'AUD', name: 'Australian dollar' },\n]\n\nexport const SYMBOL = {\n  USD: '$',\n  EUR: '€',\n  JPY: '¥',\n  BGN: 'лв.',\n  CZK: 'Kč',\n  GBP: '£',\n  HUF: 'Ft',\n  PLN: 'zł',\n  RON: 'L',\n  SEK: 'kr',\n  CHF: 'Fr',\n  ISK: 'kr',\n  NOK: 'kr',\n  HRK: 'kn',\n  RUB: '₽',\n  TRY: '₺',\n  AUD: 'A$',\n}\n\nexport const CURRENCY_OPTIONS = [\n  { label: 'United States dollar (USD)', value: 'USD' },\n  { label: 'Euro (EUR)', value: 'EUR' },\n  { label: 'Japanese yen (JPY)', value: 'JPY' },\n  { label: 'Bulgarian lev (BGN)', value: 'BGN' },\n  { label: 'Czech koruna (CZK)', value: 'CZK' },\n  { label: 'Pound sterling (GBP)', value: 'GBP' },\n  { label: 'Hungarian forint (HUF)', value: 'HUF' },\n  { label: 'Polish zloty (PLN)', value: 'PLN' },\n  { label: 'Romanian leu (RON)', value: 'RON' },\n  { label: 'Swedish krona (SEK)', value: 'SEK' },\n  { label: 'Swiss franc (CHF)', value: 'CHF' },\n  { label: 'Icelandic krona (ISK)', value: 'ISK' },\n  { label: 'Norwegian krone (NOK)', value: 'NOK' },\n  { label: 'Croatian kuna (HRK)', value: 'HRK' },\n  { label: 'Russian rouble (RUB)', value: 'RUB' },\n  { label: 'Turkish lira (TRY)', value: 'TRY' },\n  { label: 'Australian dollar (AUD)', value: 'AUD' },\n]\n\nexport const CURRENCIES_ARRAY = [\n  'EUR',\n  'JPY',\n  'BGN',\n  'CZK',\n  'GBP',\n  'HUF',\n  'PLN',\n  'RON',\n  'SEK',\n  'CHF',\n  'ISK',\n  'NOK',\n  'HRK',\n  'RUB',\n  'TRY',\n  'AUD',\n]\n","/** @jsxRuntime classic /\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nimport React, { FC } from 'react'\n\nimport { DARK_GRAY } from '../constants/colors'\n\ninterface CurrencyConverterProp\n  extends React.ClassAttributes<HTMLDivElement>,\n    React.HTMLAttributes<HTMLDivElement> {\n  title: string\n  subtitle?: string\n}\nexport const SectionTitle: FC<CurrencyConverterProp> = ({\n  title,\n  subtitle,\n  ...props\n}) => {\n  return (\n    <div\n      {...props}\n      css={css`\n        display: flex;\n        flex-direction: column;\n        gap: 9px;\n        grid-area: title;\n\n        color: ${DARK_GRAY};\n      `}\n    >\n      <h2\n        css={css`\n          font-size: 28px;\n          font-weight: 700;\n          margin: 0;\n        `}\n      >\n        {title}\n      </h2>\n      <h3\n        css={css`\n          font-size: 18px;\n          font-weight: 300;\n          margin: 0;\n        `}\n      >\n        {subtitle}\n      </h3>\n    </div>\n  )\n}\n"],"sourceRoot":""}