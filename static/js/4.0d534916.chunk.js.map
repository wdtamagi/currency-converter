{"version":3,"sources":["hooks/useGetExchangeRates.ts","components/CurrencyTable.tsx","pages/ExchangeRates.tsx","constants/currency.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/SectionTitle.tsx"],"names":["EXCHANGE_RATES","gql","useGetExchangeRates","options","useQuery","CurrencyTable","data","variables","baseCurrency","quoteCurrencies","CURRENCIES_ARRAY","css","DETAIL_GRAY","LIGHT_GRAY","DARK_GRAY","align","CURRENCIES","map","currency","key","short","name","latest","find","rate","quoteCurrency","quote","ExchangeRates","ContentWrapper","SectionTitle","title","SYMBOL","USD","EUR","JPY","BGN","CZK","GBP","HUF","PLN","RON","SEK","CHF","ISK","NOK","HRK","RUB","TRY","AUD","CURRENCY_OPTIONS","label","value","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","subtitle","props"],"mappings":"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","file":"static/js/4.0d534916.chunk.js","sourcesContent":["import { useQuery, gql, QueryHookOptions } from '@apollo/client'\n\nexport const EXCHANGE_RATES = gql`\n  query GetExchangeRates($baseCurrency: String, $quoteCurrencies: [String!]) {\n    latest(baseCurrency: $baseCurrency, quoteCurrencies: $quoteCurrencies) {\n      baseCurrency\n      quoteCurrency\n      quote\n    }\n  }\n`\n\ninterface Rate {\n  baseCurrency: string\n  quoteCurrency: string\n  quote: number\n}\ninterface Result {\n  latest: Rate[]\n}\ninterface Variables {\n  baseCurrency: string\n  quoteCurrencies: Array<string>\n}\n\nexport const useGetExchangeRates = (\n  options?: QueryHookOptions<Result, Variables>,\n) => {\n  return useQuery<Result, Variables>(EXCHANGE_RATES, { ...options })\n}\n","/** @jsxRuntime classic /\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nimport React, { FC } from 'react'\nimport { DARK_GRAY, DETAIL_GRAY, LIGHT_GRAY } from '../constants/colors'\nimport { CURRENCIES, CURRENCIES_ARRAY } from '../constants/currency'\nimport { useGetExchangeRates } from '../hooks/useGetExchangeRates'\n\nexport const CurrencyTable: FC = () => {\n  const { data } = useGetExchangeRates({\n    variables: {\n      baseCurrency: 'USD',\n      quoteCurrencies: CURRENCIES_ARRAY,\n    },\n  })\n\n  return (\n    <div\n      css={css`\n        max-width: 919px;\n        border: 1px solid ${DETAIL_GRAY};\n        border-radius: 5px;\n        overflow: hidden;\n      `}\n    >\n      <table\n        css={css`\n          width: 100%;\n          border-spacing: 0;\n\n          & > thead > tr > th {\n            background-color: ${LIGHT_GRAY};\n            color: ${DARK_GRAY};\n            font-size: 18px;\n            line-height: 21px;\n            font-weight: 700;\n            padding: 20px 23px;\n          }\n\n          & > tbody > tr > td {\n            color: ${DARK_GRAY};\n            font-size: 18px;\n            line-height: 21px;\n            font-weight: 300;\n            padding: 10px 23px;\n          }\n        `}\n      >\n        <thead>\n          <tr>\n            <th align=\"left\">Currency</th>\n            <th align=\"left\">Currency Name</th>\n            <th align=\"left\">Exchange Rate = 1 USD</th>\n          </tr>\n        </thead>\n        <tbody>\n          {CURRENCIES.map((currency) => (\n            <tr key={currency.short}>\n              <td>{currency.short}</td>\n              <td>{currency.name}</td>\n              <td>\n                {data?.latest.find(\n                  (rate) => rate.quoteCurrency === currency.short,\n                )?.quote ?? 0}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","/** @jsxRuntime classic /\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nimport React, { FC } from 'react'\n\nimport { SectionTitle } from '../components/SectionTitle'\nimport { ContentWrapper } from '../components/ContentWrapper'\nimport { CurrencyTable } from '../components/CurrencyTable'\n\nconst ExchangeRates: FC = () => {\n  return (\n    <section>\n      <ContentWrapper\n        css={css`\n          display: flex;\n          flex-direction: column;\n          width: 100%;\n          box-sizing: border-box;\n          padding-top: 83px;\n        `}\n      >\n        <SectionTitle\n          title=\"US Dollar (USD) Exchange Rates\"\n          css={css`\n            padding-bottom: 39px;\n          `}\n        />\n        <CurrencyTable />\n      </ContentWrapper>\n    </section>\n  )\n}\n\nexport default ExchangeRates\n","export const CURRENCIES = [\n  { short: 'EUR', name: 'Euro' },\n  { short: 'JPY', name: 'Japanese yen' },\n  { short: 'BGN', name: 'Bulgarian lev' },\n  { short: 'CZK', name: 'Czech koruna' },\n  { short: 'GBP', name: 'Pound sterling' },\n  { short: 'HUF', name: 'Hungarian forint' },\n  { short: 'PLN', name: 'Polish zloty' },\n  { short: 'RON', name: 'Romanian leu' },\n  { short: 'SEK', name: 'Swedish krona' },\n  { short: 'CHF', name: 'Swiss franc' },\n  { short: 'ISK', name: 'Icelandic krona' },\n  { short: 'NOK', name: 'Norwegian krone' },\n  { short: 'HRK', name: 'Croatian kuna' },\n  { short: 'RUB', name: 'Russian rouble' },\n  { short: 'TRY', name: 'Turkish lira' },\n  { short: 'AUD', name: 'Australian dollar' },\n]\n\nexport const SYMBOL = {\n  USD: '$',\n  EUR: '€',\n  JPY: '¥',\n  BGN: 'лв.',\n  CZK: 'Kč',\n  GBP: '£',\n  HUF: 'Ft',\n  PLN: 'zł',\n  RON: 'L',\n  SEK: 'kr',\n  CHF: 'Fr',\n  ISK: 'kr',\n  NOK: 'kr',\n  HRK: 'kn',\n  RUB: '₽',\n  TRY: '₺',\n  AUD: 'A$',\n}\n\nexport const CURRENCY_OPTIONS = [\n  { label: 'United States dollar (USD)', value: 'USD' },\n  { label: 'Euro (EUR)', value: 'EUR' },\n  { label: 'Japanese yen (JPY)', value: 'JPY' },\n  { label: 'Bulgarian lev (BGN)', value: 'BGN' },\n  { label: 'Czech koruna (CZK)', value: 'CZK' },\n  { label: 'Pound sterling (GBP)', value: 'GBP' },\n  { label: 'Hungarian forint (HUF)', value: 'HUF' },\n  { label: 'Polish zloty (PLN)', value: 'PLN' },\n  { label: 'Romanian leu (RON)', value: 'RON' },\n  { label: 'Swedish krona (SEK)', value: 'SEK' },\n  { label: 'Swiss franc (CHF)', value: 'CHF' },\n  { label: 'Icelandic krona (ISK)', value: 'ISK' },\n  { label: 'Norwegian krone (NOK)', value: 'NOK' },\n  { label: 'Croatian kuna (HRK)', value: 'HRK' },\n  { label: 'Russian rouble (RUB)', value: 'RUB' },\n  { label: 'Turkish lira (TRY)', value: 'TRY' },\n  { label: 'Australian dollar (AUD)', value: 'AUD' },\n]\n\nexport const CURRENCIES_ARRAY = [\n  'EUR',\n  'JPY',\n  'BGN',\n  'CZK',\n  'GBP',\n  'HUF',\n  'PLN',\n  'RON',\n  'SEK',\n  'CHF',\n  'ISK',\n  'NOK',\n  'HRK',\n  'RUB',\n  'TRY',\n  'AUD',\n]\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/** @jsxRuntime classic /\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nimport React, { FC } from 'react'\n\nimport { DARK_GRAY } from '../constants/colors'\n\ninterface CurrencyConverterProp\n  extends React.ClassAttributes<HTMLDivElement>,\n    React.HTMLAttributes<HTMLDivElement> {\n  title: string\n  subtitle?: string\n}\nexport const SectionTitle: FC<CurrencyConverterProp> = ({\n  title,\n  subtitle,\n  ...props\n}) => {\n  return (\n    <div\n      {...props}\n      css={css`\n        display: flex;\n        flex-direction: column;\n        gap: 9px;\n        grid-area: title;\n\n        color: ${DARK_GRAY};\n      `}\n    >\n      <h2\n        css={css`\n          font-size: 28px;\n          font-weight: 700;\n          margin: 0;\n        `}\n      >\n        {title}\n      </h2>\n      <h3\n        css={css`\n          font-size: 18px;\n          font-weight: 300;\n          margin: 0;\n        `}\n      >\n        {subtitle}\n      </h3>\n    </div>\n  )\n}\n"],"sourceRoot":""}